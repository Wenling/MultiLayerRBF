#! /bin/bash

if [[ -z $1 ]]
then
	trainsize=60
else
	trainsize=$1
fi
root=/home/ws779/ML/MultiLayerRBF

function runLogReg {
	rm ../result/logReg.csv ../result/logReg_modified.csv
	for k in 1 2 4 8 16 32 64 128 256 512 617
	do
		echo "torch main.lua $trainsize 1 $k 80 0.01 -3 10 >> ../result/logReg.csv" &
		torch main.lua $trainsize 1 $k 80 0.01 -3 10 >> ../result/logReg.csv &
	done
	sed '/Torch/d' ../result/logReg.csv | sed '/Unable/d' | sed '/#/d' | sort -t , -k 1,1n -k 2,2n > ../result/logReg.csv
}

function runTwoLinReg {
	rm ../result/TwoLinReg.csv ../result/TwoLinReg_modified.csv
	for k in 1 2 4 8 16 32 64 128 256 512 617
	do
		for HU in 10 20 40 80 100
		do
			echo "torch main.lua $trainsize 2 $k $HU 0.01 -3 10 >> ../result/TwoLinReg.csv" &
			torch main.lua $trainsize 2 $k $HU 0.01 -3 10 >> ../result/TwoLinReg.csv &
			
		done
	done
	sed '/Torch/d' ../result/TwoLinReg.csv | sed '/Unable/d' | sed '/#/d' | sort -t , -k 1,1n -k 2,2n > ../result/TwoLinReg_modified.csv
}

function runRBF {
	for k in 32 56 64 80 100
	do
		for h in 40 60 80 100 120
		do
			for w in -3 -2.5 -2
			do
				for lr in 0.11 0.1 0.09 0.101
				do
					cat > ../script/pbs.script.$k.$h.$w.$lr <<- EOF
					#!/bin/bash
					 
					#PBS -l nodes=1:ppn=4,walltime=00:30:00
					#PBS -N rbf-$k-$h-$w-$lr
					#PBS -M ws779@nyu.edu
					#PBS -o $root/result/RBF/rbf-$k-$h-$w-$lr
					#PBS -e $root/result/RBF/rbf-$k-$h-$w-$lr.e
					#PBS -m abe
					 
					module load torch/intel/7.0
					cd $root/src
					torch main.lua $trainsize 3 $k $h $lr -3 30
					cat $root/result/RBF/rbf-$k-$h-$w-$lr >> $root/result/RBF/rbf.csv
					
					exit 0;
					
					EOF
					qsub ../script/pbs.script.$k.$h.$w.$lr
				done
			done
		done
	done
	sed '/Torch/d' ../result/rbf.csv | sed '/Unable/d' | sed '/#/d' | sort -t , -k 1,1n -k 2,2n > ../result/RBF_modified.csv
}

function runAntiRBF {
	rm -rf $root/result/AntiRBF
	mkdir ../result/AntiRBF
	mkdir ../script/
	for k in 16 32 64 128 256 512 617
	do
		for h in 40 80 100 120
		do
			for lr in 0.005 0.0005 0.0001
			do
				for w in -5 -4 -3 -2
				do
					cat > ../script/pbs.script.$k.$h.$w.$lr <<- EOF
					#!/bin/bash
					 
					#PBS -l nodes=1:ppn=4,walltime=00:30:00
					#PBS -N arbf-$k-$h-$w-$lr
					#PBS -M ws779@nyu.edu
					#PBS -o $root/result/AntiRBF/arbf-$k-$h-$w-$lr
					#PBS -e $root/result/AntiRBF/arbf-$k-$h-$w-$lr.e
					#PBS -m abe
					 
					module load torch/intel/7.0
					cd $root/src
					torch main.lua $trainsize 4 $k $h $lr -3 30
					cat $root/result/AntiRBF/arbf-$k-$h-$w-$lr >> $root/result/AntiRBF/antirbf.log
					
					exit 0;
					
					EOF
					qsub ../script/pbs.script.$k.$h.$w.$lr
				done
			done
		done
	done
}

function runHRBF {
	mkdir $root/result/HRBF
	for k in 1 2 4 8 16 32 64 128 256 512 617
	do
		for h in 10 20 40 80 100 120
		do
			for lr in 0.1 0.01 0.001 0.005 0.0005 0.0001
			do
				for w in -5 -4 -3 -2
				do
				  cat > ../script/pbs.script.$k.$h.$w.$lr <<- EOF
					#!/bin/bash
					 
					#PBS -l nodes=1:ppn=4,walltime=00:30:00
					#PBS -N arbf-$k-$h-$w-$lr
					#PBS -M ws779@nyu.edu
					#PBS -o $root/result/HRBF/hrbf-$k-$h-$w-$lr
					#PBS -e $root/result/HRBF/hrbf-$k-$h-$w-$lr.e
					#PBS -m abe
					 
					module load torch/intel/7.0
					cd $root/src
					torch main.lua $trainsize 5 $k $h $lr -3 30
					cat $root/result/AntiRBF/arbf-$k-$h-$w-$lr >> $root/result/AntiRBF/antirbf.log
					
					exit 0;
					
					EOF
					qsub ../script/pbs.script.$k.$h.$w.$lr
				done
			done
		done
	done
}

function runLinRBF {
	mkdir $root/result/LinRBF
	for k in 250 256 260
	do
		for h in 110 120 130
		do
			for lr in 0.005 0.0005
			do
				for w in -6.5 -5.5
				do
				  cat > ../script/pbs.script.$k.$h.$w.$lr <<- EOF
					#!/bin/bash
					 
					#PBS -l nodes=1:ppn=4,walltime=00:30:00
					#PBS -N linrbf-$k-$h-$w-$lr
					#PBS -M ws779@nyu.edu
					#PBS -o $root/result/LinRBF/linrbf-$k-$h-$w-$lr
					#PBS -e $root/result/LinRBF/linrbf-$k-$h-$w-$lr.e
					#PBS -m abe
					 
					module load torch/intel/7.0
					cd $root/src
					torch main.lua $trainsize 6 $k $h $lr $w 35
					cat $root/result/LinRBF/linrbf-$k-$h-$w-$lr >> $root/result/LinRBF/linrbf2.csv
					
					exit 0;
					
					EOF
					qsub ../script/pbs.script.$k.$h.$w.$lr
				done
			done
		done
	done
}

function runLinReg {
	mkdir $root/result/LinReg
	for k in 250 256 260
	do
		for h in 100 120 140
		do
			for lr in 0.001 0.008 0.0005
			do
				for lambda in 0.1 0.01 0.001
				do
				  cat > ../script/pbs.script.$k.$h.$lr.$lambda <<- EOF
					#!/bin/bash
					 
					#PBS -l nodes=1:ppn=1,walltime=00:30:00
					#PBS -N linreg-$k-$h-$lr-$lambda
					#PBS -M ws779@nyu.edu
					#PBS -o $root/result/LinReg/linreg-$k-$h-$lr-$lambda
					#PBS -e $root/result/LinReg/linreg-$k-$h-$lr-$lambda.e
					#PBS -m abe
					 
					module load torch/intel/7.0
					cd $root/src
					torch main.lua $trainsize 7 $k $h $lr -5.5 35 $lambda
					cat $root/result/LinReg/linreg-$k-$h-$lr-$lambda >> $root/result/LinReg/linreg.csv
					
					exit 0;
					
					EOF
					qsub ../script/pbs.script.$k.$h.$lr.$lambda
				done
			done
		done
	done
}

function runLinRBF2 {
	mkdir $root/result/LinRBF2
	for k in 250 256 260
	do
		for h in 120 140
		do
			for lr in 0.001 0.0005
			do
				for lambda in 0.1 0.01 0.001
				do
					for w in -5.5 -5
					do
					  	cat > ../script/pbs.script.$k.$h.$lr.$w.$lambda <<- EOF
						#!/bin/bash
						 
						#PBS -l nodes=1:ppn=1,walltime=00:30:00
						#PBS -N mod-$k-$h-$lr-$w-$lambda
						#PBS -M ws779@nyu.edu
						#PBS -o $root/result/LinRBF2/mod-$k-$h-$lr-$w-$lambda
						#PBS -e $root/result/LinRBF2/mod-$k-$h-$lr-$w-$lambda.e
						#PBS -m abe
						 
						module load torch/intel/7.0
						cd $root/src
						torch main.lua $trainsize 8 $k $h $lr $w 35 $lambda
						cat $root/result/LinRBF2/mod-$k-$h-$lr-$w-$lambda >> $root/result/LinRBF2/mod.csv
						
						exit 0;
						
						EOF
						qsub ../script/pbs.script.$k.$h.$lr.$w.$lambda
					done
				done
			done
		done
	done
}

if [[ $2 -eq 1 ]]; then
	runLogReg
fi
if [[ $2 -eq 2 ]]; then
	runTwoLinReg
fi
if [[ $2 -eq 3 ]]; then
	runRBF
fi
if [[ $2 -eq 4 ]]; then
	runAntiRBF
fi
if [[ $2 -eq 5 ]]; then
	runHRBF
fi
if [[ $2 -eq 6 ]]; then
	runLinRBF
fi
if [[ $2 -eq 7 ]]; then
	runLinReg
fi
if [[ $2 -eq 8 ]]; then
	runLinRBF2
fi