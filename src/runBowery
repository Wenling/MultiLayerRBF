#! /bin/bash

if [[ -z $1 ]]
then
	trainsize=60
else
	trainsize=$1
fi
NR_PROC=4

function runLogReg {
	rm ../result/logReg.csv ../result/logReg_modified.csv
	for k in 1 2 4 8 16 32 64 128 256 512 617
	do
		echo "torch main.lua $trainsize 1 $k 80 0.01 -3 10 >> ../result/logReg.csv" &
		torch main.lua $trainsize 1 $k 80 0.01 -3 10 >> ../result/logReg.csv &
	done
	sed '/Torch/d' ../result/logReg.csv | sed '/Unable/d' | sed '/#/d' | sort -t , -k 1,1n -k 2,2n > ../result/logReg.csv
}

function runTwoLinReg {
	rm ../result/TwoLinReg.csv ../result/TwoLinReg_modified.csv
	for k in 1 2 4 8 16 32 64 128 256 512 617
	do
		for HU in 10 20 40 80 100
		do
			echo "torch main.lua $trainsize 2 $k $HU 0.01 -3 10 >> ../result/TwoLinReg.csv" &
			torch main.lua $trainsize 2 $k $HU 0.01 -3 10 >> ../result/TwoLinReg.csv &
			
		done
	done
	sed '/Torch/d' ../result/TwoLinReg.csv | sed '/Unable/d' | sed '/#/d' | sort -t , -k 1,1n -k 2,2n > ../result/TwoLinReg_modified.csv
}

function runRBF {
	rm ../result/RBF.csv ../result/RBF_modified.csv
	for k in 1 2 4 8 16 32 64 128 256
	do
		for HU in 10 20 40 80 100
		do
			echo "torch main.lua $trainsize 3 $k $HU 0.1 -3 30 >> ../result/RBF.csv" &
			torch main.lua $trainsize 3 $k $HU 0.1 -3 30 >> ../result/RBF.csv &
			
		done
	done
	sed '/Torch/d' ../result/RBF.csv | sed '/Unable/d' | sed '/#/d' | sort -t , -k 1,1n -k 2,2n > ../result/RBF_modified.csv
}

function runAntiRBF {
	local root=/home/ws779/ML/MultiLayerRBF
	rm -rf $root/result/AntiRBF
	mkdir ../result/AntiRBF
	mkdir ../script/
	for k in 16 32 64 128 256 512 617
	do
		for h in 40 80 100 120
		do
			for lr in 0.005 0.0005 0.0001
			do
				for w in -5 -4 -3 -2
				do
					cat > ../script/pbs.script.$k.$h.$w.$lr <<- EOF
					#!/bin/bash
					 
					#PBS -l nodes=1:ppn=4,walltime=00:30:00
					#PBS -N /home/ws779/ML/MultiLayerRBF/result/AntiRBF/arbf-$k-$h-$w-$lr
					#PBS -M ws779@nyu.edu
					#PBS -m abe
					 
					module load torch/intel/7.0
					cd /home/ws779/ML/MultiLayerRBF/src
					torch main.lua $trainsize 4 $k $h $lr -3 30
					cat /home/ws779/ML/MultiLayerRBF/result/AntiRBF/arbf-$k-$h-$w-$lr.log >> antirbf.log
					
					exit 0;
					
					EOF
				done
			done
		done
	done
}

function runHRBF {
	for k in 1 2 4 8 16 32 64 128 256 512 617
	do
		for h in 10 20 40 80 100
		do
			for lr in 0.1 0.01 0.001 0.005 0.0005
			do
				for w in -5 -4 -3 -2
				do
				  echo 'n'	
				done
			done
		done
	done
}

if [[ $2 -eq 1 ]]; then
	runLogReg
fi
if [[ $2 -eq 2 ]]; then
	runTwoLinReg
fi
if [[ $2 -eq 3 ]]; then
	runRBF
fi
if [[ $2 -eq 4 ]]; then
	runAntiRBF
fi
if [[ $2 -eq 5 ]]; then
	runHRBF
fi
